{
	"genes_list": {
		"BGL": [
			"PKLR",
			"HBB",
			"HBA2",
			"HBA1"
		],
		"SURF": [
			"COPA",
			"SFTPB",
			"SFTPC",
			"NKX2-1",
			"ABCA3",
			"FOXF1",
			"TBX4",
			"MARS"
		],
		"SCN": [
			"SCN9A",
			"SCN10A",
			"SCN11A"
		],
		"LMNA": [
			"LMNA"
		],
		"HFE": [
			"HFE"
		],
		"GILBERT": [
			"UGT1A1"
		],
		"CFTR": [
			"CFTR"
		],
		"TTR": [
			"TTR"
		],
		"HBG2": [
			"HBG2"
		],
		"TPI1": [
			"TPI1"
		],
		"GPI": [
			"GPI"
		],
		"BPGM": [
			"BPGM"
		],
		"HMOX1": [
			"HMOX1"
		],
		"CYB5R3": [
			"CYB5R3"
		],
		"ALAS2": [
			"ALAS2"
		],
		"GLA": [
			"GLA"
		],
		"G6PD": [
			"G6PD"
		],
		"SRY": [
			"SRY"
		]
	},
	"steps": [
		{
			"title": "Presets d'Alix",
			"description": "<body>Première étape de la validation.<br>Les filtres appliqués montrent uniquement les variants dont la fréquence allélique en population générale est inférieure à <a style=\"color:red;background:yellow\">1%</a>.</body>",
			"query": {
				"select": {
					"fields": [
						"main_table.run_name AS 'Nom du run'",
						"validation_hash AS '.validation_hash'",
						"main_table.sample_name AS 'Échantillon'",
						"main_table.snpeff_Gene_Name AS 'Nom du gène:color=red:bold='",
						"main_table.snpeff_Feature_ID AS 'NM'",
						"main_table.chromosome AS 'Chromosome'",
						"main_table.position AS 'Position'",
						"main_table.reference AS 'Allèle de référence'",
						"main_table.alternate AS 'Allèle alternatif'",
						"format('{{:.2f}}',main_table.cv_AF) AS 'Fréquence allélique'",
						"main_table.snpeff_Annotation AS 'Annotation'",
						"main_table.cv_GT AS 'Génotype'",
						"main_table.snpeff_Annotation_Impact AS 'Annotation impact'",
						"agg.ref_count AS 'Nombre d''allèles de référence dans la base'",
						"agg.var_count AS 'Nombre de variants détectés dans la base'",
						"recur.count AS 'Nombre d''observations du variant dans ce run'",
						"clinvar.CLNACC AS 'Numéro d''accession clinvar'",
						"clinvar.CLNSIG AS 'Signification CLINVAR'",
						"main_table.\"snpeff_HGVS.c\" AS 'c. de l anomalie'"
					],
					"tables": [
						{
							"expression": "{main_table}",
							"alias": "main_table"
						},
						{
							"expression": "read_parquet('{pwd}/aggregates/variants.parquet')",
							"alias": "agg",
							"on": "main_table.variant_hash = agg.variant_hash",
							"how": ""
						},
						{
							"select": {
								"fields": [
									"variant_hash",
									"COUNT(*) as count"
								],
								"tables": [
									{
										"select": {
											"fields": [
												"DISTINCT(sample_name)",
												"variant_hash"
											],
											"tables": [
												{
													"expression": "{main_table}",
													"alias": ""
												}
											]
										},
										"alias": ""
									}
								],
								"group_by": [
									"variant_hash"
								]
							},
							"alias": "recur",
							"on": "main_table.variant_hash = recur.variant_hash",
							"how": ""
						},
						{
							"select": {
								"fields": [
									"variant_hash",
									"rcvAcc AS CLNACC",
									"clinSign AS CLNSIG"
								],
								"tables": [
									{
										"expression": "read_parquet('{pwd}/annotations/clinvarMain.parquet')",
										"alias": ""
									}
								]
							},
							"alias": "clinvar",
							"on": "main_table.variant_hash = clinvar.variant_hash",
							"how": ""
						},
						{
							"expression": "read_csv('{pwd}/lists/liste_nms.csv',sep=',',header=false,names=['NM'])",
							"alias": "nms",
							"on": "main_table.snpeff_Feature_ID = nms.NM",
							"how": ""
						}
					],
					"filter": {
						"filter_type": "AND",
						"children": [
							{
								"expression": "main_table.sample_name IN {selected_samples}"
							},
							{
								"expression": "main_table.snpeff_Gene_Name IN {selected_genes}"
							}
						]
					},
					"order_by": [
						{
							"field": "main_table.chromosome",
							"order": "ASC"
						},
						{
							"field": "main_table.position",
							"order": "ASC"
						}
					]
				}
			}
		},
		{
			"title": "Presets de Pascale",
			"description": "<body>Première étape de la validation.\nLes filtres appliqués montrent uniquement les variants dont la fréquence allélique en population générale est inférieure à <a style=\"color:red;background:yellow\">1%</a>.</body>",
			"query": {
				"select": {
					"fields": [
						"main_table.run_name",
						"main_table.sample_name",
						"main_table.snpeff_Gene_Name",
						"main_table.snpeff_Feature_ID",
						"main_table.chromosome",
						"main_table.position",
						"main_table.reference",
						"main_table.alternate",
						"main_table.cv_AF",
						"main_table.snpeff_Annotation",
						"main_table.cv_GT",
						"main_table.snpeff_Annotation_Impact",
						"agg.ref_count",
						"agg.var_count",
						"recur.count",
						"clinvar.CLNACC",
						"clinvar.CLNSIG",
						"main_table.\"snpeff_HGVS.c\" AS 'c. de l anomalie'"
					],
					"tables": [
						{
							"expression": "{main_table}",
							"alias": "main_table"
						},
						{
							"expression": "read_parquet('{pwd}/aggregates/variants.parquet')",
							"alias": "agg",
							"on": "main_table.variant_hash = agg.variant_hash",
							"how": ""
						},
						{
							"select": {
								"fields": [
									"variant_hash",
									"COUNT(*) as count"
								],
								"tables": [
									{
										"select": {
											"fields": [
												"DISTINCT(sample_name)",
												"variant_hash"
											],
											"tables": [
												{
													"expression": "{main_table}",
													"alias": ""
												}
											]
										},
										"alias": ""
									}
								],
								"group_by": [
									"variant_hash"
								]
							},
							"alias": "recur",
							"on": "main_table.variant_hash = recur.variant_hash",
							"how": ""
						},
						{
							"select": {
								"fields": [
									"variant_hash",
									"rcvAcc AS CLNACC",
									"clinSign AS CLNSIG"
								],
								"tables": [
									{
										"expression": "read_parquet('{pwd}/annotations/clinvarMain.parquet')",
										"alias": ""
									}
								]
							},
							"alias": "clinvar",
							"on": "main_table.variant_hash = clinvar.variant_hash",
							"how": ""
						}
					],
					"order_by": [
						{
							"field": "main_table.chromosome",
							"order": "DESC"
						},
						{
							"field": "main_table.position",
							"order": "DESC"
						}
					]
				}
			}
		}
	],
	"final": {
		"query": {
			"select": {
				"fields": [
					"'hg19' AS 'Version genome'",
					"main_table.sample_name AS 'Sample ID'",
					"clinvar._allTypeCode AS 'Famille de l anomalie'",
					"main_table.chromosome||':'||main_table.position||':'||main_table.reference||'>'||main_table.alternate AS 'Libelle de l anomalie'",
					"main_table.chromosome AS Chr",
					"main_table.snpeff_Gene_Name AS 'Nom du gene'",
					"hgnc.name AS 'Code HGNC'",
					"main_table.snpeff_Feature_ID AS 'NM'",
					"main_table.snpeff_Annotation AS 'Type region'",
					"format('{{:02d}}',2) AS 'Sequence region'",
					"main_table.position AS 'Start'",
					"main_table.position AS 'End'",
					"main_table.reference AS Ref",
					"main_table.alternate AS Alt",
					"main_table.format_AD[1] AS 'Ref allele count'",
					"main_table.format_AD[2] AS 'Alt allele count'",
					"main_table.cv_AF AS 'VAF'",
					"main_table.\"snpeff_HGVS.c\" AS 'c. de l anomalie'",
					"main_table.\"snpeff_HGVS.p\" AS 'p. de l anomalie'",
					"'g.'||main_table.chromosome||'-'||main_table.position||main_table.reference||'-'||main_table.alternate AS 'g. de l anomalie'",
					"user_table.validation_hash"
				],
				"tables": [
					{
						"expression": "{main_table}",
						"alias": "main_table"
					},
					{
						"expression": "'{pwd}/aggregates/variants.parquet'",
						"alias": "agg",
						"on": "main_table.variant_hash = agg.variant_hash",
						"how": ""
					},
					{
						"expression": "{user_table}",
						"alias": "user_table",
						"on": "main_table.validation_hash = user_table.validation_hash",
						"how": ""
					},
					{
						"expression": "read_parquet('{pwd}/annotations/hgnc.hg19.parquet')",
						"alias": "hgnc",
						"on": "main_table.chromosome = hgnc.chrom AND main_table.position >= hgnc.chromStart AND main_table.position <= hgnc.chromEnd",
						"how": ""
					},
					{
						"expression": "read_parquet('{pwd}/annotations/clinvarMain.parquet')",
						"alias": "clinvar",
						"on": "main_table.variant_hash = clinvar.variant_hash",
						"how": ""
					}
				]
			}
		}
	}
}